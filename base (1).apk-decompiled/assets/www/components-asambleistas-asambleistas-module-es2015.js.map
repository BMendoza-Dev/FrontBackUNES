{"version":3,"sources":["./src/app/components/asambleistas/asambleistas.page.html","./src/app/components/asambleistas/asambleistas.module.ts","./src/app/components/asambleistas/asambleistas.page.scss","./src/app/components/asambleistas/asambleistas.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wCAAwC,6BAA6B,o+BAAo+B,mBAAmB,0FAA0F,QAAQ,yFAAyF,mQAAmQ,kOAAkO,iBAAiB,8GAA8G,8JAA8J,iBAAiB,2CAA2C,mBAAmB,GAAG,oBAAoB,8CAA8C,8BAA8B,sS;;;;;;;;;;;;;;;;;;;;;;;ACAloE;AACM;AACF;AACU;AAEV;AAEU;AACD;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;QACzB,QAAQ,EACJ;YACI;gBACI,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EACJ;oBACI;wBACI,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,yEAAyE;qBAC1F;iBACJ;aACR;YACD;gBACI,IAAI,EAAE,WAAW;gBACjB,QAAQ,EACJ;oBACI;wBACI,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,0DAA0D;qBAC3E;iBACJ;aACR;YACD;gBACI,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,gBAAgB;gBAC5B,SAAS,EAAE,MAAM;aACpB;SACJ;KACR;CACF,CAAC;AAYF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAAG;AAAzB,sBAAsB;IAVlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC3B,mEAAgB;SACnB;QACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;ACvDnC,2BAA2B,6BAA6B,qBAAqB,WAAW,8BAA8B,wBAAwB,iBAAiB,GAAG,6CAA6C,26B;;;;;;;;;;;;;;;;;;ACApJ;AACJ;AAQvD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwKE;IACF,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE9C,QAAQ;IAGR,CAAC;CACJ;;YANkC,iEAAU;;AA1KhC,gBAAgB;IAL5B,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,uKAAuC;;KAE1C,CAAC;2EA2KiC,iEAAU;GA1KhC,gBAAgB,CAgL5B;AAhL4B","file":"components-asambleistas-asambleistas-module-es2015.js","sourcesContent":["module.exports = \"<app-header title=\\\"{{properties.titleAssemblyman}}\\\"></app-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-tabs>\\r\\n    <ion-tab-bar slot=\\\"top\\\">\\r\\n      <ion-tab-button  tab=\\\"tabPrincipales\\\">\\r\\n        <ion-icon name=\\\"person\\\"></ion-icon>\\r\\n        <ion-label>Principales</ion-label>\\r\\n      </ion-tab-button>\\r\\n\\r\\n      <ion-tab-button  tab=\\\"tabAmbito\\\">\\r\\n        <ion-icon name=\\\"md-globe\\\"></ion-icon>\\r\\n        <ion-label>Ambito Territorial</ion-label>\\r\\n      </ion-tab-button>\\r\\n\\r\\n      <!--<ion-tab-button tab=\\\"tabAlternos\\\">\\r\\n        <ion-icon name=\\\"people\\\"></ion-icon>\\r\\n        <ion-label>Alternos</ion-label>\\r\\n      </ion-tab-button>-->\\r\\n    </ion-tab-bar>\\r\\n  </ion-tabs>\\r\\n\\r\\n<!--  <div class=\\\"stycky\\\">\\r\\n    <ion-select interface=\\\"action-sheet\\\" (ionChange)=\\\"onChange($event)\\\"\\r\\n                placeholder=\\\"Seleccione un ítem de la lista\\\"\\r\\n                cancel-text=\\\"Cancelar\\\"\\r\\n                [selectedText]=\\\"periodActive.name\\\"\\r\\n                style=\\\"border-bottom: 2px solid #a2a4ab;text-align: center;\\\"\\r\\n    >\\r\\n      <ion-select-option *ngFor=\\\"let p of arrayPeriod\\\"  [value]=\\\"p\\\" >{{p.name}}</ion-select-option>\\r\\n    </ion-select>\\r\\n    <ion-searchbar style=\\\"font-size: small;\\\" (change)=\\\"searchItems($event)\\\" (ionClear)=\\\"getClear()\\\" [value]=\\\"searchAssembly\\\" autocomplete=\\\"on\\\" placeholder=\\\"Para buscar mínimo 3 caracteres\\\"></ion-searchbar>\\r\\n  </div>\\r\\n  <ion-card class=\\\"cardStyles\\\" *ngFor=\\\"let assembly of assemblyMan; let end=last\\\">\\r\\n    <ion-item (click)=\\\"changeModal(assembly.id,assembly.imageChange)\\\">\\r\\n      <img [src]='assembly.imageChange'  [hidden]=\\\"assembly.imageChange==null|| assembly.imageChange == 0\\\"  style=\\\"width: 40px; margin:5px auto;\\\" />\\r\\n      <ion-icon [hidden]=\\\"assembly.imageChange !== 0\\\" name=\\\"md-contact\\\" style=\\\"font-size: 2.5em;\\\"></ion-icon>\\r\\n      <ion-spinner [hidden]=\\\"assembly.imageChange!=null\\\"   name=\\\"circles\\\"></ion-spinner>\\r\\n      <ion-label style=\\\"font-size: smaller;margin-left: 5px;\\\">\\r\\n        <small class=\\\"linkText\\\">{{assembly.lastName}} {{assembly.firstName}}</small><br><span></span>\\r\\n        <small>{{assembly.territorialDivision}}</small><br><span></span>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n  <ion-infinite-scroll (ionInfinite)=\\\"loadData($event)\\\">\\r\\n    <ion-infinite-scroll-content loadingSpinner=\\\"\\\">\\r\\n    </ion-infinite-scroll-content>\\r\\n  </ion-infinite-scroll>-->\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AsambleistasPage } from './asambleistas.page';\r\nimport {ComponentsModule} from '../components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AsambleistasPage,\r\n      children:\r\n          [\r\n              {\r\n                  path: 'tabPrincipales',\r\n                  children:\r\n                      [\r\n                          {\r\n                              path: '',\r\n                              loadChildren: '../tabs/tab-principales/tab-principales.module#TabPrincipalesPageModule'\r\n                          }\r\n                      ]\r\n              },\r\n              {\r\n                  path: 'tabAmbito',\r\n                  children:\r\n                      [\r\n                          {\r\n                              path: '',\r\n                              loadChildren: '../tabs/tab-ambito/tab-ambito.module#TabAmbitoPageModule'\r\n                          }\r\n                      ]\r\n              },\r\n              {\r\n                  path: '',\r\n                  redirectTo: 'tabPrincipales',\r\n                  pathMatch: 'full'\r\n              }\r\n          ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n      ComponentsModule\r\n  ],\r\n  declarations: [AsambleistasPage]\r\n})\r\nexport class AsambleistasPageModule {}\r\n","module.exports = \".stycky {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background-color: #ffffff;\\n  margin-bottom: 10px;\\n  z-index: 999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phbmRyZXMvRXNjcml0b3Jpby9Qcm95ZWN0b3MtZGUtU29mdHdhcmUvQXBwL2FwcC1hc2FtYmxlYS9zcmMvYXBwL2NvbXBvbmVudHMvYXNhbWJsZWlzdGFzL2FzYW1ibGVpc3Rhcy5wYWdlLnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvYXNhbWJsZWlzdGFzL2FzYW1ibGVpc3Rhcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3QkFBQTtFQUNBLGdCQUFBO0VBQ0EsTUFBQTtFQUNBLHlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FzYW1ibGVpc3Rhcy9hc2FtYmxlaXN0YXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN0eWNreXtcclxuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICB0b3A6MDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgei1pbmRleDogOTk5O1xyXG59XHJcbiIsIi5zdHlja3kge1xuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgei1pbmRleDogOTk5O1xufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Properties} from '../../properties/properties';\r\n\r\n\r\n@Component({\r\n    selector: 'app-asambleistas',\r\n    templateUrl: './asambleistas.page.html',\r\n    styleUrls: ['./asambleistas.page.scss'],\r\n})\r\nexport class AsambleistasPage implements OnInit {\r\n    /*\r\n    assemblyMan: AssemblyMan[] = [];\r\n    searchAssembly = '';\r\n    photoMan: any;\r\n    periodActive: Period = new Period();\r\n    allPeriod: Period[] = [];\r\n    arrayPeriod: Period[] = [];\r\n    i = 0;\r\n    // @ts-ignore\r\n    @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\r\n\r\n    constructor(public properties: Properties,\r\n                public modalController: ModalController,\r\n                private rest: RestService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getPeriod();\r\n        this.getPeriodAll();\r\n    }\r\n\r\n    getPeriod() {\r\n        this.rest.getPeriod().subscribe(respo => {\r\n                this.periodActive =  respo;\r\n            }, error1 => {}, () => {\r\n                this.listAssemblyByPeriod();\r\n            }\r\n        );\r\n    }\r\n\r\n    getPeriodAll() {\r\n        let j = 0;\r\n        this.rest.getPeriodAll().subscribe(response => {\r\n                this.allPeriod = response;\r\n                this.allPeriod.forEach(data => {\r\n                    if (!data.name.indexOf('ASAMBLEA NACIONAL')) {\r\n                        this.arrayPeriod[j] = data;\r\n                        j = j + 1;\r\n                    }\r\n                });\r\n            }, error1 => {}, () => {\r\n\r\n            }\r\n        );\r\n    }\r\n    onChange(event) {\r\n        this.periodActive = event.target.value;\r\n        this.assemblyMan = [];\r\n        this.i = 0;\r\n        this.infiniteScroll.disabled = false;\r\n        this.listAssemblyByPeriod();\r\n    }\r\n    public loadData(event) {\r\n        setTimeout(() => {\r\n            this.listAssemblyByPeriod(event);\r\n        }, 500);\r\n    }\r\n    listAssemblyByPeriod(event?) {\r\n        const incre = 30;\r\n        if (event !== undefined) {\r\n            this.i = this.i + incre;\r\n        }\r\n        this.rest.getAssemblyMembersResource({\r\n            periodId: this.periodActive.id,\r\n            territorialId: 0,\r\n            politicalPartyId: 0,\r\n            includePicture: false,\r\n            onlyActives: false,\r\n            onlyAlterns: false,\r\n            assembly: 0,\r\n            offset: this.i,\r\n            limit: 30\r\n        }).subscribe( response => {\r\n            if (response.length > 0) {\r\n                if (event !== undefined) {\r\n                    this.assemblyMan.push(...response);\r\n                    if (event) {\r\n                        event.target.complete();\r\n                    }\r\n                } else {\r\n                    this.assemblyMan = response;\r\n                }\r\n            } else {\r\n                if (response.length === 0) {\r\n                    event.target.disabled = true;\r\n                }\r\n            }\r\n        }, () => {\r\n            console.log('Ha ocurrido un error');\r\n        }, () => {\r\n            if (this.assemblyMan) {\r\n                this.listAssemblyPhoto();\r\n            }\r\n        });\r\n    }\r\n\r\n    listAssemblyPhoto() {\r\n        this.assemblyMan.forEach((data) => {\r\n            this.getPhoto(data);\r\n        });\r\n    }\r\n\r\n    getPhoto(data: AssemblyMan) {\r\n        this.rest.getAssemblymanPhoto({\r\n            assemblyMemberId: data.id\r\n        }).subscribe( responsePhoto => {\r\n                const blob = new Blob([responsePhoto], {\r\n                    type: 'image/png'\r\n                });\r\n                if (blob.size > 0) {\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(blob);\r\n                    reader.onloadend = () => {\r\n                        this.photoMan = reader.result;\r\n                        data['imageChange'] = this.photoMan;\r\n                    };\r\n                } else {\r\n                    data['imageChange'] = 0;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    async changeModal(id, image) {\r\n        const modal = await this.modalController.create({\r\n            component: ModalAsambleistaPage,\r\n            componentProps: {\r\n                'periodActive': this.periodActive.id,\r\n                'idAssembly': id,\r\n                'imageChange': image,\r\n                'assembly': this.assemblyMan.filter(data => data.id === id)\r\n            }\r\n        });\r\n        return await modal.present();\r\n    }\r\n\r\n    searchItems(event) {\r\n        const f = event.target.value;\r\n        if ( f && f.toString().length > 2 ) {\r\n            this.rest.getAssemblyMembersResource({\r\n                periodId: this.periodActive.id,\r\n                territorialId: 0,\r\n                politicalPartyId: 0,\r\n                includePicture: false,\r\n                onlyActives: false,\r\n                onlyAlterns: false,\r\n                assembly: f,\r\n                offset: 0,\r\n                limit: 30\r\n            }).subscribe( response => {\r\n                this.assemblyMan = response;\r\n            }, () => {\r\n            }, () => {\r\n                if (this.assemblyMan) {\r\n                    this.listAssemblyPhoto();\r\n                    this.infiniteScroll.disabled = true;\r\n                }\r\n            });\r\n        } else if (this.searchAssembly === '') {\r\n            this.assemblyMan = [];\r\n            this.listAssemblyByPeriod();\r\n        }\r\n    }\r\n    getClear() {\r\n        this.i = 0;\r\n        this.assemblyMan = [];\r\n        this.listAssemblyByPeriod();\r\n    }\r\n    */\r\n    constructor(public properties: Properties) { }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n}\r\n"],"sourceRoot":""}