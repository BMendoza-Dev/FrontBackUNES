{"version":3,"sources":["./src/app/components/tabs/tab-ambito/tab-ambito.page.html","./src/app/components/tabs/tab-ambito/tab-ambito.module.ts","./src/app/components/tabs/tab-ambito/tab-ambito.page.scss","./src/app/components/tabs/tab-ambito/tab-ambito.page.ts"],"names":[],"mappings":"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","file":"tabs-tab-ambito-tab-ambito-module-es5.js","sourcesContent":["module.exports = \"\\n<ion-content>\\n  <ion-searchbar *ngIf=\\\"false\\\" style=\\\"font-size: small;\\\" (change)=\\\"filterTerritorials($event)\\\" (ionClear)=\\\"filterTerritorials('')\\\" autocomplete=\\\"on\\\" placeholder=\\\"\\\"></ion-searchbar>\\n  <ion-card *ngIf=\\\"!showListAssembly\\\">\\n    <ion-card class=\\\"cardStyles\\\" *ngFor=\\\"let com of territorialListFiltered\\\">\\n      <ion-item (click)=\\\"selectCommission(com)\\\" style=\\\"font-size: 12px;\\\">\\n        <ion-text>{{ com.name.toUpperCase() }}</ion-text>\\n      </ion-item>\\n    </ion-card>\\n  </ion-card>\\n\\n  <ion-select *ngIf=\\\"showListAssembly\\\" interface=\\\"action-sheet\\\"\\n              (ionChange)=\\\"onChange($event)\\\" [(ngModel)]=\\\"territorialIdSelected\\\"\\n              placeholder=\\\"Seleccione un Ã­tem de la lista\\\"\\n              cancel-text=\\\"Cancelar\\\"\\n              style=\\\"border-bottom: 2px solid #a2a4ab;text-align: center;\\\"\\n  >\\n    <ion-select-option *ngFor=\\\"let t of territorialList\\\" [value]=\\\"t.id\\\" >{{t.name}}</ion-select-option>\\n  </ion-select>\\n\\n  <ion-card *ngIf=\\\"showListAssembly\\\">\\n    <ion-card class=\\\"cardStyles\\\" *ngFor=\\\"let assembly of assemblyList\\\">\\n      <ion-item (click)=\\\"changeModal(assembly.id,assembly.imageChange)\\\">\\n        <img [src]='assembly.imageChange'  [hidden]=\\\"assembly.imageChange==null\\\"  style=\\\"width: 40px; margin:5px auto;\\\" />\\n        <ion-spinner [hidden]=\\\"assembly.imageChange!=null\\\"   name=\\\"circles\\\"></ion-spinner>\\n        <ion-label style=\\\"font-size: smaller;margin-left: 5px;\\\">\\n          <small>{{assembly.lastName}} {{assembly.firstName}}</small><br><span></span>\\n          <small>{{assembly.politicalParty}}</small><br><span></span>\\n        </ion-label>\\n      </ion-item>\\n    </ion-card>\\n  </ion-card>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabAmbitoPage } from './tab-ambito.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabAmbitoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TabAmbitoPage]\n})\nexport class TabAmbitoPageModule {}\n","module.exports = \"ion-select {\\n  background-color: white;\\n  --placeholder-opacity: 1 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phbmRyZXMvRXNjcml0b3Jpby9Qcm95ZWN0b3MtZGUtU29mdHdhcmUvQXBwL2FwcC1hc2FtYmxlYS9zcmMvYXBwL2NvbXBvbmVudHMvdGFicy90YWItYW1iaXRvL3RhYi1hbWJpdG8ucGFnZS5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3RhYnMvdGFiLWFtYml0by90YWItYW1iaXRvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUFBO0VBQ0EsbUNBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFicy90YWItYW1iaXRvL3RhYi1hbWJpdG8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNlbGVjdHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMSAhaW1wb3J0YW50O1xufVxuXG4iLCJpb24tc2VsZWN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMSAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {RestService} from '../../../service/rest.service';\nimport {AssemblyMan, MeetingGroup, Period, TerritorialDivision} from '../../../interfaces/model';\nimport { ModalController } from '@ionic/angular';\nimport {ModalAsambleistaPage} from '../../modal/modal-asambleista/modal-asambleista.page';\n\n@Component({\n    selector: 'app-tab-ambito',\n    templateUrl: './tab-ambito.page.html',\n    styleUrls: ['./tab-ambito.page.scss'],\n})\nexport class TabAmbitoPage implements OnInit {\n    territorialList: TerritorialDivision[];\n    territorialListFiltered: TerritorialDivision[];\n    assemblyList: AssemblyMan[];\n    photoMan: any;\n    periodActive: Period;\n    showListAssembly: boolean = false;\n    territorialIdSelected: number = 0;\n\n    constructor(private rest: RestService, public modalController: ModalController) { }\n\n    ngOnInit() {\n        this.getPeriod();\n        this.getTerritorialList();\n    }\n    getPeriod() {\n        this.rest.getPeriod().subscribe(respo => {\n                this.periodActive =  respo;\n            }, error1 => {\n            console.log('Se ha producido un error');\n            }\n        );\n    }\n    getTerritorialList() {\n        this.rest.getTerritorialList().subscribe( response => {\n            this.territorialList = response;\n            this.territorialListFiltered = this.territorialList;\n        });\n    }\n\n    onChange($event) {\n        if($event.target.value !== null){\n            this.getAssemblymenTerritorialList($event.target.value);\n        }\n    }\n\n    getAssemblymenTerritorialList(id: any){\n        this.rest.getAssemblyMembersResource({\n            periodId: this.periodActive.id,\n            territorialId: id,\n            politicalPartyId: 0,\n            includePicture: false,\n            onlyActives: true,\n            onlyAlterns: false,\n            assembly: 0,\n            offset: 0,\n            limit: 0\n        }).subscribe( response => {\n            this.assemblyList = response;\n            this.getPhotosList();\n        });\n    }\n\n    async changeModal(id, image) {\n        const modal = await this.modalController.create({\n            component: ModalAsambleistaPage,\n            componentProps: {\n                'assembly': this.assemblyList.filter(data => data.id == id)\n            }\n        });\n        return await modal.present();\n    }\n\n    getPhotosList() {\n        this.assemblyList.forEach((data) => {\n            this.getPhoto(data);\n        });\n    }\n\n    getPhoto(data: AssemblyMan) {\n        this.rest.getAssemblymanPhoto({\n            assemblyMemberId: data.id\n        }).subscribe( responsePhoto => {\n                const blob = new Blob([responsePhoto], {\n                    type: 'image/png'\n                });\n                if (blob.size > 0) {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = () => {\n                        this.photoMan = reader.result;\n                        data['imageChange'] = this.photoMan;\n                    };\n                } else {\n                    data['imageChange'] = '../assets/images/silueta.png';\n                }\n            }, () => {\n                data['imageChange'] = '../assets/images/silueta.png';\n            }\n        );\n    }\n\n    filterTerritorials(d: any) {\n        const f = d.target.value.toString().trim().toLowerCase();\n        if(f.length === 0){\n            this.territorialListFiltered = this.territorialList;\n        } else {\n            this.territorialListFiltered = this.territorialList.filter(data => data.name.toLowerCase().includes(f))\n        }\n    }\n\n    selectCommission(m: TerritorialDivision){\n        this.getAssemblymenTerritorialList(m.id);\n        this.territorialIdSelected = m.id;\n        this.showListAssembly = true;\n    }\n\n}\n"],"sourceRoot":""}