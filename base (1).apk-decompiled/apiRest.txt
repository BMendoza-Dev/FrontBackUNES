getThemes(sendData) {
        return this.http.get(this.urlApp + '/themesResource?id=' + sendData.id + '&search=' +
            '' + sendData.search + '&sessionNumber=' + sendData.sessionNumber + '&dateFrom='
            + sendData.dateFrom + '&dateTo=' + sendData.dateTo + '&offset=' + sendData.offset + '&limit=30');
    }
    getAssemblymanPhoto(sendData) {
        return this.http.get(this.urlApp + '/assemblyMembersResource/getPhoto/' + sendData.assemblyMemberId, { responseType: 'blob' });
    }
    getAttachmentsFromTheme(sendData) {
        if (sendData.themeId) {
            return this.http.get(this.urlApp + '/agendasResource/findAttachments/' + sendData.sessionId + '/' + sendData.themeId);
        }
        else {
            return this.http.get(this.urlApp + '/agendasResource/findAttachments/' + sendData.sessionId);
        }
    }
    getAttachment(sendData) {
        return this.http.get(this.urlApp + '/agendasResource/download?attachmentId=' + sendData.attachmentId, { responseType: 'blob' });
    }
    getListSessions(sendData) {
        return this.http.get(this.urlApp + '/agendasResource/getList?' +
            '&sessionNumber=' + sendData.sessionNumber +
            '&from=' + sendData.from +
            '&to=' + sendData.to +
            '&offset=' + sendData.offset +
            '&limit=15');
    }
    getListThemesBySession(sendData) {
        return this.http.get(this.urlApp + '/themesResource/find1?agendaId=' + sendData.agendaId + '&date=' + sendData.date);
    }
    getOrderApproved(sendData) {
        return this.http.get(this.urlApp + '/themesResource/find?agendaId=' + sendData.agendaId + '&date=' + sendData.date);
    }
    getInterveningByTheme(sendData) {
        return this.http.get(this.urlApp + '/themesResource/findSpeechRequests?themeId=' + sendData.themeId);
    }
    getListVotation(sendData) {
        return this.http.get(this.urlApp + '/votingsResource/getList?id=' + sendData.id + '&sessionNumber=' + sendData.sessionNumber +
            '&dateFrom=' + sendData.dateFrom + '&dateTo=' + sendData.dateTo +
            '&search=' + sendData.search + '&meetingGroupId=0&offset=' + sendData.offset + '&limit=30');
    }
    getVotationAttachment(sendData) {
        return this.http.get(this.urlApp + '/votingsResource/generatePDF?votingId=' + sendData.votingId, { responseType: 'blob' });
    }
    getVotingDetail(sendData) {
        return this.http.get(this.urlApp + '/votingsResource/findVotingGraphic/' + sendData.votingId);
    }
    getVotingVotes(sendData) {
        return this.http.get(this.urlApp + '/votingsResource/findVotes/' + sendData.votingId);
    }
    getVotingVotesByPoliticalParty(sendData) {
        return this.http.get(this.urlApp + '/votingsResource/findVotingByPoliticalParties/' + sendData.votingId);
    }
    getTerritorialList() {
        return this.http.get(this.urlApp + '/periodsResource/territorialDivision/');
    }
    getCommissionList(sendData) {
        return this.http.get(this.urlApp + '/periodsResource/' + sendData.periodId + '/meetingGroups/' + sendData.meetingGroupTypeId);
    }
    getAssemblymanByCommission(sendData) {
        return this.http.get(this.urlApp + '/meetingGroupsResource/' + sendData.meetingGroupId + '/assemblyMembersNoPic/');
    }
    getCommissionsAssemblyman(sendData) {
        return this.http.get(this.urlApp + '/assemblyMembersResource/findCommission/' + sendData.assemblyMemberId);
    }
    getParameterValueFromName(sendData) {
        return this.http.get(this.urlApp + '/systemParametersResource/findSystemParameters?pattern=' + sendData.pattern);
    }
    getDetailVoting(sendData) {
        return this.http.get(this.urlApp + '/assemblyMembersResource/findVotings?periodId=' + sendData.periodId
            + '&assemblyMemberId=' + sendData.assemblyMemberId + '&description=' + sendData.description
            + '&offset=' + sendData.offset + '&limit=' + sendData.limit);
    }
    getDetailIntervening(sendData) {
        return this.http.get(this.urlApp + '/assemblyMembersResource/findSpeechRequest?periodId=' + sendData.periodId
            + '&assemblyMemberId=' + sendData.assemblyMemberId + '&description=' + sendData.description
            + '&offset=' + sendData.offset + '&limit=' + sendData.limit);
    }
    getQuorumsByAssembly(sendData) {
        return this.http.get(this.urlApp + '/assemblyMembersResource/findQuorums?periodId=' + sendData.periodId
            + '&assemblyMemberId=' + sendData.assemblyMemberId + '&session=' + sendData.session
            + '&offset=' + sendData.offset + '&limit=' + sendData.limit);
    }
    getPeriod() {
        return this.http.get(this.urlApp + '/periodsResource/findActivePeriod');
    }
    getPeriodAll() {
        return this.http.get(this.urlApp + '/periodsResource/getAll');
    }
    getAssemblyMembersResource(sendData) {
        return this.http.get(this.urlApp + '/assemblyMembersResource/find/' + sendData.periodId + '/' + sendData.territorialId + '/' +
            sendData.politicalPartyId + '/' + sendData.includePicture + '/' + sendData.onlyActives + '/' + sendData.onlyAlterns + '/' +
            sendData.assembly + '/' + sendData.offset + '/' + sendData.limit);
    }
    getAssemblyHouses() {
        return this.http.get(this.urlApp + '/assemblyHouseResource/getAll');
    }
    getInterveningBySession(sendData) {
        return this.http.get(this.urlApp + '/agendasResource/findSpeechRequests?agendaId=' + sendData.agendaId + '&date=' + sendData.date);
    }
    getFacebookLive() {
        return this.http.get(this.urlApp + '/facebookLiveResource/getAll');
    }