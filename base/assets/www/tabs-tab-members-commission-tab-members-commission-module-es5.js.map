{"version":3,"sources":["./src/app/components/tabs/tab-members-commission/tab-members-commission.page.html","./src/app/components/tabs/tab-members-commission/tab-members-commission.module.ts","./src/app/components/tabs/tab-members-commission/tab-members-commission.page.scss","./src/app/components/tabs/tab-members-commission/tab-members-commission.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,oUAAoU,iBAAiB,qKAAqK,iBAAiB,kCAAkC,mBAAmB,GAAG,oBAAoB,wDAAwD,iEAAiE,yI;;;;;;;;;;;;;;;;;;;;;;ACAvqB;AACM;AACF;AACU;AAEV;AAE4B;AAEzE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qFAAwB;KACpC;CACF,CAAC;AAWF;IAAA;IAA6C,CAAC;IAAjC,8BAA8B;QAT1C,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qFAAwB,CAAC;SACzC,CAAC;OACW,8BAA8B,CAAG;IAAD,qCAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3C,+DAA+D,uM;;;;;;;;;;;;;;;;;;;;ACAb;AAGQ;AACX;AACQ;AAOvD;IAEE,kCAAoB,IAAiB,EAAS,eAAgC,EAC1D,KAAqB;QADrB,SAAI,GAAJ,IAAI,CAAa;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAC1D,UAAK,GAAL,KAAK,CAAgB;QAEzC,iBAAY,GAAkB,EAAE,CAAC;IAFY,CAAC;IAG9C,2CAAQ,GAAR;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,sCAAsC;IAC1C,CAAC;;gBARyB,iEAAW;gBAA0B,8DAAe;gBACnD,8DAAc;;IAH9B,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,0MAAiD;;SAElD,CAAC;+EAG0B,iEAAW,EAA0B,8DAAe;YACnD,8DAAc;OAH9B,wBAAwB,CAuEpC;IAAD,+BAAC;CAAA;AAvEoC","file":"tabs-tab-members-commission-tab-members-commission-module-es5.js","sourcesContent":["module.exports = \"<ion-content>\\n    <ion-card>\\n        <ion-card class=\\\"cardStyles\\\" *ngFor=\\\"let assembly of assemblyList\\\">\\n            <ion-item (click)=\\\"changeModal(assembly.id,assembly.imageChange)\\\">\\n                <img [src]='assembly.imageChange'  [hidden]=\\\"assembly.imageChange==null\\\"  style=\\\"width: 40px; margin:5px auto;\\\" />\\n                <ion-spinner [hidden]=\\\"assembly.imageChange!=null\\\"   name=\\\"circles\\\"></ion-spinner>\\n                <ion-label style=\\\"font-size: smaller;margin-left: 5px;\\\">\\n                    <small>{{assembly.lastName}} {{assembly.firstName}}</small><br><span></span>\\n                    <small>{{assembly.roleName?assembly.roleName:'INTEGRANTE DE LA COMISIÃ“N'}}</small><br><span></span>\\n                </ion-label>\\n            </ion-item>\\n        </ion-card>\\n    </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabMembersCommissionPage } from './tab-members-commission.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabMembersCommissionPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TabMembersCommissionPage]\n})\nexport class TabMembersCommissionPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGFicy90YWItbWVtYmVycy1jb21taXNzaW9uL3RhYi1tZW1iZXJzLWNvbW1pc3Npb24ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {AssemblyMan} from \"../../../interfaces/model\";\nimport {ModalAsambleistaPage} from \"../../modal/modal-asambleista/modal-asambleista.page\";\nimport {RestService} from \"../../../service/rest.service\";\nimport {ModalController} from \"@ionic/angular\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-tab-members-commission',\n  templateUrl: './tab-members-commission.page.html',\n  styleUrls: ['./tab-members-commission.page.scss'],\n})\nexport class TabMembersCommissionPage implements OnInit {\n\n  constructor(private rest: RestService, public modalController: ModalController,\n              private route: ActivatedRoute) { }\n\n  assemblyList: AssemblyMan[] = [];\n  ngOnInit() {\n      const id = this.route.snapshot.queryParamMap.get('id');\n      console.log(id);\n      //this.getAssemblymenCommissionList();\n  }\n\n    /*getAssemblymenCommissionList() {\n        const id = this.route.snapshot.queryParamMap.get('id');\n        this.rest.getAssemblymanByCommission({\n            meetingGroupId: id\n        }).subscribe( response => {\n            this.assemblyList = response;\n            for(let i=0; i<this.assemblyList.length; i++) {\n                for(let j=0; j<this.roleList.length; j++) {\n                    if ( this.assemblyList[i].roleName.toLowerCase().startsWith(this.roleList[j].name) ){\n                        this.assemblyList[i].roleOrder = this.roleList[j].order;\n                        break;\n                    }\n                }\n            }\n            this.assemblyList.sort((a, b) =>\n                a.roleOrder - b.roleOrder);\n            this.getPhotosList();\n        });\n    }\n\n    getPhotosList() {\n        this.assemblyList.forEach((data) => {\n            this.getPhoto(data);\n        });\n    }\n\n    getPhoto(data: AssemblyMan) {\n        this.rest.getAssemblymanPhoto({\n            assemblyMemberId: data.id\n        }).subscribe( responsePhoto => {\n                const blob = new Blob([responsePhoto], {\n                    type: 'image/png'\n                });\n                if (blob.size > 0) {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = () => {\n                        this.photoMan = reader.result;\n                        data['imageChange'] = this.photoMan;\n                    };\n                } else {\n                    data['imageChange'] = '../assets/images/silueta.png';\n                }\n            }, () => {\n                data['imageChange'] = '../assets/images/silueta.png';\n            }\n        );\n    }\n\n    async changeModal(id, image) {\n        const modal = await this.modalController.create({\n            component: ModalAsambleistaPage,\n            componentProps: {\n                'assembly': this.assemblyList.filter(data => data.id == id)\n            }\n        });\n        return await modal.present();\n    }*/\n\n}\n"],"sourceRoot":""}