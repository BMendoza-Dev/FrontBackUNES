{"version":3,"sources":["./src/app/components/asambleistas/asambleistas.page.html","./src/app/components/asambleistas/asambleistas.module.ts","./src/app/components/asambleistas/asambleistas.page.scss","./src/app/components/asambleistas/asambleistas.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wCAAwC,6BAA6B,86BAA86B,mBAAmB,sFAAsF,QAAQ,qFAAqF,+PAA+P,8NAA8N,iBAAiB,4GAA4G,0JAA0J,iBAAiB,yCAAyC,mBAAmB,GAAG,oBAAoB,4CAA4C,8BAA8B,oR;;;;;;;;;;;;;;;;;;;;;;;ACAljE;AACM;AACF;AACU;AAEV;AAEU;AACD;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;QACzB,QAAQ,EACJ;YACI;gBACI,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EACJ;oBACI;wBACI,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,yEAAyE;qBAC1F;iBACJ;aACR;YACD;gBACI,IAAI,EAAE,WAAW;gBACjB,QAAQ,EACJ;oBACI;wBACI,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,0DAA0D;qBAC3E;iBACJ;aACR;YACD;gBACI,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,gBAAgB;gBAC5B,SAAS,EAAE,MAAM;aACpB;SACJ;KACR;CACF,CAAC;AAYF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAVlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC3B,mEAAgB;aACnB;YACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACvDnC,2BAA2B,6BAA6B,qBAAqB,WAAW,8BAA8B,wBAAwB,iBAAiB,GAAG,6CAA6C,23B;;;;;;;;;;;;;;;;;;ACApJ;AACJ;AAQvD;IACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwKE;IACF,0BAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE9C,mCAAQ,GAAR;IAGA,CAAC;;gBAL8B,iEAAU;;IA1KhC,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,uKAAuC;;SAE1C,CAAC;+EA2KiC,iEAAU;OA1KhC,gBAAgB,CAgL5B;IAAD,uBAAC;CAAA;AAhL4B","file":"components-asambleistas-asambleistas-module-es5.js","sourcesContent":["module.exports = \"<app-header title=\\\"{{properties.titleAssemblyman}}\\\"></app-header>\\n\\n<ion-content>\\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-tab-button  tab=\\\"tabPrincipales\\\">\\n        <ion-icon name=\\\"person\\\"></ion-icon>\\n        <ion-label>Principales</ion-label>\\n      </ion-tab-button>\\n\\n      <ion-tab-button  tab=\\\"tabAmbito\\\">\\n        <ion-icon name=\\\"md-globe\\\"></ion-icon>\\n        <ion-label>Ambito Territorial</ion-label>\\n      </ion-tab-button>\\n\\n      <!--<ion-tab-button tab=\\\"tabAlternos\\\">\\n        <ion-icon name=\\\"people\\\"></ion-icon>\\n        <ion-label>Alternos</ion-label>\\n      </ion-tab-button>-->\\n    </ion-tab-bar>\\n  </ion-tabs>\\n\\n<!--  <div class=\\\"stycky\\\">\\n    <ion-select interface=\\\"action-sheet\\\" (ionChange)=\\\"onChange($event)\\\"\\n                placeholder=\\\"Seleccione un ítem de la lista\\\"\\n                cancel-text=\\\"Cancelar\\\"\\n                [selectedText]=\\\"periodActive.name\\\"\\n                style=\\\"border-bottom: 2px solid #a2a4ab;text-align: center;\\\"\\n    >\\n      <ion-select-option *ngFor=\\\"let p of arrayPeriod\\\"  [value]=\\\"p\\\" >{{p.name}}</ion-select-option>\\n    </ion-select>\\n    <ion-searchbar style=\\\"font-size: small;\\\" (change)=\\\"searchItems($event)\\\" (ionClear)=\\\"getClear()\\\" [value]=\\\"searchAssembly\\\" autocomplete=\\\"on\\\" placeholder=\\\"Para buscar mínimo 3 caracteres\\\"></ion-searchbar>\\n  </div>\\n  <ion-card class=\\\"cardStyles\\\" *ngFor=\\\"let assembly of assemblyMan; let end=last\\\">\\n    <ion-item (click)=\\\"changeModal(assembly.id,assembly.imageChange)\\\">\\n      <img [src]='assembly.imageChange'  [hidden]=\\\"assembly.imageChange==null|| assembly.imageChange == 0\\\"  style=\\\"width: 40px; margin:5px auto;\\\" />\\n      <ion-icon [hidden]=\\\"assembly.imageChange !== 0\\\" name=\\\"md-contact\\\" style=\\\"font-size: 2.5em;\\\"></ion-icon>\\n      <ion-spinner [hidden]=\\\"assembly.imageChange!=null\\\"   name=\\\"circles\\\"></ion-spinner>\\n      <ion-label style=\\\"font-size: smaller;margin-left: 5px;\\\">\\n        <small class=\\\"linkText\\\">{{assembly.lastName}} {{assembly.firstName}}</small><br><span></span>\\n        <small>{{assembly.territorialDivision}}</small><br><span></span>\\n      </ion-label>\\n    </ion-item>\\n  </ion-card>\\n  <ion-infinite-scroll (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content loadingSpinner=\\\"\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>-->\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AsambleistasPage } from './asambleistas.page';\nimport {ComponentsModule} from '../components.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AsambleistasPage,\n      children:\n          [\n              {\n                  path: 'tabPrincipales',\n                  children:\n                      [\n                          {\n                              path: '',\n                              loadChildren: '../tabs/tab-principales/tab-principales.module#TabPrincipalesPageModule'\n                          }\n                      ]\n              },\n              {\n                  path: 'tabAmbito',\n                  children:\n                      [\n                          {\n                              path: '',\n                              loadChildren: '../tabs/tab-ambito/tab-ambito.module#TabAmbitoPageModule'\n                          }\n                      ]\n              },\n              {\n                  path: '',\n                  redirectTo: 'tabPrincipales',\n                  pathMatch: 'full'\n              }\n          ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n      ComponentsModule\n  ],\n  declarations: [AsambleistasPage]\n})\nexport class AsambleistasPageModule {}\n","module.exports = \".stycky {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background-color: #ffffff;\\n  margin-bottom: 10px;\\n  z-index: 999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJlc21vcmFsZXMvSW3DoWdlbmVzL2FwcC1hc2FtYmxlYTIvc3JjL2FwcC9jb21wb25lbnRzL2FzYW1ibGVpc3Rhcy9hc2FtYmxlaXN0YXMucGFnZS5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2FzYW1ibGVpc3Rhcy9hc2FtYmxlaXN0YXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0JBQUE7RUFDQSxnQkFBQTtFQUNBLE1BQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hc2FtYmxlaXN0YXMvYXNhbWJsZWlzdGFzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdHlja3l7XG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOjA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHotaW5kZXg6IDk5OTtcbn1cbiIsIi5zdHlja3kge1xuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgei1pbmRleDogOTk5O1xufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Properties} from '../../properties/properties';\n\n\n@Component({\n    selector: 'app-asambleistas',\n    templateUrl: './asambleistas.page.html',\n    styleUrls: ['./asambleistas.page.scss'],\n})\nexport class AsambleistasPage implements OnInit {\n    /*\n    assemblyMan: AssemblyMan[] = [];\n    searchAssembly = '';\n    photoMan: any;\n    periodActive: Period = new Period();\n    allPeriod: Period[] = [];\n    arrayPeriod: Period[] = [];\n    i = 0;\n    // @ts-ignore\n    @ViewChild(IonInfiniteScroll) infiniteScroll: IonInfiniteScroll;\n\n    constructor(public properties: Properties,\n                public modalController: ModalController,\n                private rest: RestService) {\n    }\n\n    ngOnInit() {\n        this.getPeriod();\n        this.getPeriodAll();\n    }\n\n    getPeriod() {\n        this.rest.getPeriod().subscribe(respo => {\n                this.periodActive =  respo;\n            }, error1 => {}, () => {\n                this.listAssemblyByPeriod();\n            }\n        );\n    }\n\n    getPeriodAll() {\n        let j = 0;\n        this.rest.getPeriodAll().subscribe(response => {\n                this.allPeriod = response;\n                this.allPeriod.forEach(data => {\n                    if (!data.name.indexOf('ASAMBLEA NACIONAL')) {\n                        this.arrayPeriod[j] = data;\n                        j = j + 1;\n                    }\n                });\n            }, error1 => {}, () => {\n\n            }\n        );\n    }\n    onChange(event) {\n        this.periodActive = event.target.value;\n        this.assemblyMan = [];\n        this.i = 0;\n        this.infiniteScroll.disabled = false;\n        this.listAssemblyByPeriod();\n    }\n    public loadData(event) {\n        setTimeout(() => {\n            this.listAssemblyByPeriod(event);\n        }, 500);\n    }\n    listAssemblyByPeriod(event?) {\n        const incre = 30;\n        if (event !== undefined) {\n            this.i = this.i + incre;\n        }\n        this.rest.getAssemblyMembersResource({\n            periodId: this.periodActive.id,\n            territorialId: 0,\n            politicalPartyId: 0,\n            includePicture: false,\n            onlyActives: false,\n            onlyAlterns: false,\n            assembly: 0,\n            offset: this.i,\n            limit: 30\n        }).subscribe( response => {\n            if (response.length > 0) {\n                if (event !== undefined) {\n                    this.assemblyMan.push(...response);\n                    if (event) {\n                        event.target.complete();\n                    }\n                } else {\n                    this.assemblyMan = response;\n                }\n            } else {\n                if (response.length === 0) {\n                    event.target.disabled = true;\n                }\n            }\n        }, () => {\n            console.log('Ha ocurrido un error');\n        }, () => {\n            if (this.assemblyMan) {\n                this.listAssemblyPhoto();\n            }\n        });\n    }\n\n    listAssemblyPhoto() {\n        this.assemblyMan.forEach((data) => {\n            this.getPhoto(data);\n        });\n    }\n\n    getPhoto(data: AssemblyMan) {\n        this.rest.getAssemblymanPhoto({\n            assemblyMemberId: data.id\n        }).subscribe( responsePhoto => {\n                const blob = new Blob([responsePhoto], {\n                    type: 'image/png'\n                });\n                if (blob.size > 0) {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = () => {\n                        this.photoMan = reader.result;\n                        data['imageChange'] = this.photoMan;\n                    };\n                } else {\n                    data['imageChange'] = 0;\n                }\n            }\n        );\n    }\n\n    async changeModal(id, image) {\n        const modal = await this.modalController.create({\n            component: ModalAsambleistaPage,\n            componentProps: {\n                'periodActive': this.periodActive.id,\n                'idAssembly': id,\n                'imageChange': image,\n                'assembly': this.assemblyMan.filter(data => data.id === id)\n            }\n        });\n        return await modal.present();\n    }\n\n    searchItems(event) {\n        const f = event.target.value;\n        if ( f && f.toString().length > 2 ) {\n            this.rest.getAssemblyMembersResource({\n                periodId: this.periodActive.id,\n                territorialId: 0,\n                politicalPartyId: 0,\n                includePicture: false,\n                onlyActives: false,\n                onlyAlterns: false,\n                assembly: f,\n                offset: 0,\n                limit: 30\n            }).subscribe( response => {\n                this.assemblyMan = response;\n            }, () => {\n            }, () => {\n                if (this.assemblyMan) {\n                    this.listAssemblyPhoto();\n                    this.infiniteScroll.disabled = true;\n                }\n            });\n        } else if (this.searchAssembly === '') {\n            this.assemblyMan = [];\n            this.listAssemblyByPeriod();\n        }\n    }\n    getClear() {\n        this.i = 0;\n        this.assemblyMan = [];\n        this.listAssemblyByPeriod();\n    }\n    */\n    constructor(public properties: Properties) { }\n\n    ngOnInit() {\n\n\n    }\n}\n"],"sourceRoot":""}